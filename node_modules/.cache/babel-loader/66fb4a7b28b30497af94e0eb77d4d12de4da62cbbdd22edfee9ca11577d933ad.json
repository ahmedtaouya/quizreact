{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELECTRO FATAL\\\\OneDrive\\\\Desktop\\\\quiz\\\\quiz-app\\\\src\\\\component\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Box, Typography, Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        localStorage.setItem(\"token\", data.token);\n        navigate(\"/game\");\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Server error, please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      margin: \"auto\",\n      mt: 5,\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Login to Multiplayer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      sx: {\n        mt: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      sx: {\n        mt: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleLogin,\n      fullWidth: true,\n      sx: {\n        mt: 2\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ktx5ktSKAplPJrsY5gRTpmAHqe0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","TextField","Button","Box","Typography","Alert","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","success","localStorage","setItem","token","message","err","sx","maxWidth","margin","mt","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","label","fullWidth","value","onChange","e","target","type","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ELECTRO FATAL/OneDrive/Desktop/quiz/quiz-app/src/component/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TextField, Button, Box, Typography, Alert } from \"@mui/material\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        localStorage.setItem(\"token\", data.token);\r\n        navigate(\"/game\");\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error, please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, margin: \"auto\", mt: 5, p: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Login to Multiplayer\r\n      </Typography>\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      <TextField\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        sx={{ mt: 2 }}\r\n      />\r\n      <TextField\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        sx={{ mt: 2 }}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleLogin}\r\n        fullWidth\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Login\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}