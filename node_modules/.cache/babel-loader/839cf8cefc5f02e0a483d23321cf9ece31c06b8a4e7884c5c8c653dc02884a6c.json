{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELECTRO FATAL\\\\OneDrive\\\\Desktop\\\\quiz\\\\quiz-app\\\\src\\\\component\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Typography, Card, CardContent, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const [questionData, setQuestionData] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [scoreboard, setScoreboard] = useState([]);\n  const [user, setUser] = useState('User' + Math.floor(Math.random() * 1000)); // Random username for simplicity\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:3080');\n    setWs(socket);\n    socket.onopen = () => {\n      console.log('Connected to WebSocket server');\n    };\n    socket.onmessage = message => {\n      const data = JSON.parse(message.data);\n      switch (data.type) {\n        case 'newQuestion':\n          setQuestionData(data);\n          setSelectedAnswer(''); // Reset selected answer for new question\n          break;\n        case 'scoreUpdate':\n          setScoreboard(data.scoreboard);\n          break;\n        case 'endQuiz':\n          alert(data.message);\n          setQuestionData(null);\n          break;\n        default:\n          console.log('Unknown message type:', data.type);\n      }\n    };\n    socket.onclose = () => {\n      console.log('Disconnected from WebSocket server');\n    };\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  // Handle answer selection\n  const handleAnswerChange = event => {\n    setSelectedAnswer(event.target.value);\n  };\n\n  // Handle answer submission\n  const handleSubmitAnswer = () => {\n    if (selectedAnswer && ws) {\n      ws.send(JSON.stringify({\n        type: 'submitAnswer',\n        user: user,\n        answer: selectedAnswer\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      mt: 4\n    },\n    children: [questionData ? /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          gutterBottom: true,\n          children: questionData.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Choose an answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            value: selectedAnswer,\n            onChange: handleAnswerChange,\n            children: questionData.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: choice,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 73\n              }, this),\n              label: choice\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmitAnswer,\n          sx: {\n            mt: 2\n          },\n          disabled: !selectedAnswer,\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Waiting for the next question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 4\n      },\n      children: \"Scoreboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: 600\n      },\n      children: scoreboard.map((player, index) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [player.user, \": \", player.score, \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"q5potRDXlJ3mhKtMLpALo7HccLg=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","Button","Typography","Card","CardContent","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Box","jsxDEV","_jsxDEV","Quiz","_s","ws","setWs","questionData","setQuestionData","selectedAnswer","setSelectedAnswer","scoreboard","setScoreboard","user","setUser","Math","floor","random","socket","WebSocket","onopen","console","log","onmessage","message","data","JSON","parse","type","alert","onclose","close","handleAnswerChange","event","target","value","handleSubmitAnswer","send","stringify","answer","sx","display","flexDirection","alignItems","mt","children","maxWidth","mb","variant","component","gutterBottom","question","fileName","_jsxFileName","lineNumber","columnNumber","onChange","choices","map","choice","index","control","label","color","onClick","disabled","width","player","score","_c","$RefreshReg$"],"sources":["C:/Users/ELECTRO FATAL/OneDrive/Desktop/quiz/quiz-app/src/component/Quiz.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Typography, Card, CardContent, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Box } from '@mui/material';\r\n\r\nconst Quiz = () => {\r\n  const [ws, setWs] = useState(null);\r\n  const [questionData, setQuestionData] = useState(null);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [scoreboard, setScoreboard] = useState([]);\r\n  const [user, setUser] = useState('User' + Math.floor(Math.random() * 1000)); // Random username for simplicity\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    const socket = new WebSocket('ws://localhost:3080');\r\n    setWs(socket);\r\n\r\n    socket.onopen = () => {\r\n      console.log('Connected to WebSocket server');\r\n    };\r\n\r\n    socket.onmessage = (message) => {\r\n      const data = JSON.parse(message.data);\r\n      switch (data.type) {\r\n        case 'newQuestion':\r\n          setQuestionData(data);\r\n          setSelectedAnswer(''); // Reset selected answer for new question\r\n          break;\r\n        case 'scoreUpdate':\r\n          setScoreboard(data.scoreboard);\r\n          break;\r\n        case 'endQuiz':\r\n          alert(data.message);\r\n          setQuestionData(null);\r\n          break;\r\n        default:\r\n          console.log('Unknown message type:', data.type);\r\n      }\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log('Disconnected from WebSocket server');\r\n    };\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, []);\r\n\r\n  // Handle answer selection\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n\r\n  // Handle answer submission\r\n  const handleSubmitAnswer = () => {\r\n    if (selectedAnswer && ws) {\r\n      ws.send(\r\n        JSON.stringify({\r\n          type: 'submitAnswer',\r\n          user: user,\r\n          answer: selectedAnswer,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 4 }}>\r\n      {questionData ? (\r\n        <Card sx={{ maxWidth: 600, mb: 3 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"div\" gutterBottom>\r\n              {questionData.question}\r\n            </Typography>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Choose an answer:</FormLabel>\r\n              <RadioGroup value={selectedAnswer} onChange={handleAnswerChange}>\r\n                {questionData.choices.map((choice, index) => (\r\n                  <FormControlLabel key={index} value={choice} control={<Radio />} label={choice} />\r\n                ))}\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmitAnswer}\r\n              sx={{ mt: 2 }}\r\n              disabled={!selectedAnswer}\r\n            >\r\n              Submit Answer\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <Typography variant=\"h6\">Waiting for the next question...</Typography>\r\n      )}\r\n\r\n      <Typography variant=\"h6\" sx={{ mt: 4 }}>\r\n        Scoreboard\r\n      </Typography>\r\n      <Box sx={{ width: '100%', maxWidth: 600 }}>\r\n        {scoreboard.map((player, index) => (\r\n          <Card key={index} sx={{ mb: 1 }}>\r\n            <CardContent>\r\n              <Typography variant=\"body1\">\r\n                {player.user}: {player.score} points\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,KAAK,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,WAAW,EAAEC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExI,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,MAAM,GAAGyB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE7E;EACA5B,SAAS,CAAC,MAAM;IACd,MAAM6B,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IACnDb,KAAK,CAACY,MAAM,CAAC;IAEbA,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,OAAO,IAAK;MAC9B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACC,IAAI,CAAC;MACrC,QAAQA,IAAI,CAACG,IAAI;QACf,KAAK,aAAa;UAChBpB,eAAe,CAACiB,IAAI,CAAC;UACrBf,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;UACvB;QACF,KAAK,aAAa;UAChBE,aAAa,CAACa,IAAI,CAACd,UAAU,CAAC;UAC9B;QACF,KAAK,SAAS;UACZkB,KAAK,CAACJ,IAAI,CAACD,OAAO,CAAC;UACnBhB,eAAe,CAAC,IAAI,CAAC;UACrB;QACF;UACEa,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEG,IAAI,CAACG,IAAI,CAAC;MACnD;IACF,CAAC;IAEDV,MAAM,CAACY,OAAO,GAAG,MAAM;MACrBT,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACnD,CAAC;IAED,OAAO,MAAM;MACXJ,MAAM,CAACa,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpCvB,iBAAiB,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI3B,cAAc,IAAIJ,EAAE,EAAE;MACxBA,EAAE,CAACgC,IAAI,CACLX,IAAI,CAACY,SAAS,CAAC;QACbV,IAAI,EAAE,cAAc;QACpBf,IAAI,EAAEA,IAAI;QACV0B,MAAM,EAAE9B;MACV,CAAC,CACH,CAAC;IACH;EACF,CAAC;EAED,oBACEP,OAAA,CAACF,GAAG;IAACwC,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,GAChFtC,YAAY,gBACXL,OAAA,CAACT,IAAI;MAAC+C,EAAE,EAAE;QAAEM,QAAQ,EAAE,GAAG;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAF,QAAA,eACjC3C,OAAA,CAACR,WAAW;QAAAmD,QAAA,gBACV3C,OAAA,CAACV,UAAU;UAACwD,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,KAAK;UAACC,YAAY;UAAAL,QAAA,EAClDtC,YAAY,CAAC4C;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACbrD,OAAA,CAACJ,WAAW;UAACmD,SAAS,EAAC,UAAU;UAAAJ,QAAA,gBAC/B3C,OAAA,CAACH,SAAS;YAACkD,SAAS,EAAC,QAAQ;YAAAJ,QAAA,EAAC;UAAiB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAC3DrD,OAAA,CAACN,UAAU;YAACuC,KAAK,EAAE1B,cAAe;YAAC+C,QAAQ,EAAExB,kBAAmB;YAAAa,QAAA,EAC7DtC,YAAY,CAACkD,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACtC1D,OAAA,CAACL,gBAAgB;cAAasC,KAAK,EAAEwB,MAAO;cAACE,OAAO,eAAE3D,OAAA,CAACP,KAAK;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAACO,KAAK,EAAEH;YAAO,GAAxDC,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAqD,CAClF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACdrD,OAAA,CAACX,MAAM;UACLyD,OAAO,EAAC,WAAW;UACnBe,KAAK,EAAC,SAAS;UACfC,OAAO,EAAE5B,kBAAmB;UAC5BI,EAAE,EAAE;YAAEI,EAAE,EAAE;UAAE,CAAE;UACdqB,QAAQ,EAAE,CAACxD,cAAe;UAAAoC,QAAA,EAC3B;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,gBAEPrD,OAAA,CAACV,UAAU;MAACwD,OAAO,EAAC,IAAI;MAAAH,QAAA,EAAC;IAAgC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CACtE,eAEDrD,OAAA,CAACV,UAAU;MAACwD,OAAO,EAAC,IAAI;MAACR,EAAE,EAAE;QAAEI,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EAAC;IAExC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbrD,OAAA,CAACF,GAAG;MAACwC,EAAE,EAAE;QAAE0B,KAAK,EAAE,MAAM;QAAEpB,QAAQ,EAAE;MAAI,CAAE;MAAAD,QAAA,EACvClC,UAAU,CAAC+C,GAAG,CAAC,CAACS,MAAM,EAAEP,KAAK,kBAC5B1D,OAAA,CAACT,IAAI;QAAa+C,EAAE,EAAE;UAAEO,EAAE,EAAE;QAAE,CAAE;QAAAF,QAAA,eAC9B3C,OAAA,CAACR,WAAW;UAAAmD,QAAA,eACV3C,OAAA,CAACV,UAAU;YAACwD,OAAO,EAAC,OAAO;YAAAH,QAAA,GACxBsB,MAAM,CAACtD,IAAI,EAAC,IAAE,EAACsD,MAAM,CAACC,KAAK,EAAC,SAC/B;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC,GALLK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnD,EAAA,CA7GID,IAAI;AAAAkE,EAAA,GAAJlE,IAAI;AA+GV,eAAeA,IAAI;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}